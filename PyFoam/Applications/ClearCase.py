"""
Application-class that implements pyFoamClearCase.py
"""
from optparse import OptionGroup

from PyFoamApplication import PyFoamApplication

from PyFoam.RunDictionary.SolutionDirectory import SolutionDirectory

class ClearCase(PyFoamApplication):
    def __init__(self,args=None):
        description="""
Removes all timesteps but the first from a case-directory.
Also removes other data that is generated by sovers/utilities/PyFoam
"""
        PyFoamApplication.__init__(self,
                                   args=args,
                                   description=description,
                                   usage="%prog <caseDirectory>",
                                   interspersed=True,
                                   changeVersion=False,
                                   nr=1,
                                   exactNr=False)

    def addOptions(self):
        what=OptionGroup(self.parser,
                         "What",
                         "Define what should be cleared")
        self.parser.add_option_group(what)
        
        what.add_option("--after",
                        type="float",
                        dest="after",
                        default=None,
                        help="Only remove timesteps after this time")
        what.add_option("--processor",
                        action="store_true",
                        dest="processor",
                        default=False,
                        help="Keep the processor directories")
        what.add_option("--no-pyfoam",
                        action="store_false",
                        dest="pyfoam",
                        default=True,
                        help="Keep the PyFoam-specific directories and logfiles")
        what.add_option("--keep-last",
                        action="store_true",
                        dest="latest",
                        default=False,
                        help="Keep the data from the last time-step")

    def run(self):
        for cName in self.parser.getArgs():        
            sol=SolutionDirectory(cName,archive=None,paraviewLink=False)
            sol.clear(after=self.parser.getOptions().after,
                      processor=self.parser.getOptions().processor,
                      pyfoam=self.parser.getOptions().pyfoam,
                      keepLast=self.parser.getOptions().latest)
        
